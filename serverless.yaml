service: highfive-gchat-bot

frameworkVersion: ">=1.28.0 <2.0.0"

plugins:
  - serverless-plugin-aws-alerts
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: go1.x
  stage: ${opt:stage, self:custom.defaultStage}
  logRetentionInDays: 14
  profile: ${env:AWS_PROFILE}
  memorySize: 256
  timeout: 30
  region: eu-west-1
  stackTags:
    version: ${opt:version, 'unknown'}
    DTAP: ${self:provider.stage}
    Application: ${self:service}
  environment:
    ENV: ${self:provider.stage}
  iamRoleStatements:
#    - Effect: Allow
#      Action:
#        - "logs:CreateLogGroup"
#        - "logs:DescribeLogGroups"
#      Resource:
#        - "arn:aws:logs:#{AWS::Region}:#{AWS::AccountId}:log-group:/sr-scrappers-${self:provider.stage}/*"
#    - Effect: Allow
#      Action:
#        - "logs:CreateLogStream"
#        - "logs:DescribeLogStreams"
#      Resource:
#        - "arn:aws:logs:#{AWS::Region}:#{AWS::AccountId}:log-group:/sr-scrappers-${self:provider.stage}/*:*"
#    - Effect: Allow
#      Action:
#        - "logs:PutLogEvents"
#      Resource:
#        - "arn:aws:logs:#{AWS::Region}:#{AWS::AccountId}:log-group:/sr-scrappers-${self:provider.stage}/*:*:*"
    - Effect: Allow
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:Query"
      Resource:
        - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/Highfive-${self:provider.stage}"

custom:
  defaultStage: dev
  alerts:
    definitions:
      functionErrors:
        period: 300
        treatMissingData: notBreaching
      functionThrottles:
        period: 300
        treatMissingData: notBreaching
      functionInvocations:
        period: 300
        treatMissingData: notBreaching
    dashboards: false
    alarms:
      - functionThrottles
      - functionErrors
    #      - functionInvocations
    #      - functionDuration
    topics:
      alarm:
        topic: ${self:service}-alarms-${self:provider.stage}
        notifications: ${self:custom.alarms.${self:provider.stage}}
  alarms:
    dev:
#      - endpoint: https://api.eu.opsgenie.com/v1/json/cloudwatch?apiKey=ca359485-af5f-43df-8470-14a021d16964
#        protocol: https
    prod:
#      - endpoint: https://api.eu.opsgenie.com/v1/json/cloudwatch?apiKey=8c6a1fcf-9640-41b4-bbb0-a3ccf2dcf955
#        protocol: https

package:
  individually: true
  exclude:
    - ./**
  include:
    - ./configs/**

functions:
  bot:
    handler: build/bot
    package:
      include:
        - ./build/bot
    environment:
      STORAGE_TABLE_NAME: "Highfive-${self:provider.stage}"
    events:
      - http:
          method: any
          path: /v1/{proxy+}
          cors: true
#
#resources:
#  Resources:
